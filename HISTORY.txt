Step 0.
The project was created as follows:

seamless-new-project nademo
seamless-load-project-trusted

in the IPython terminal:

import json
graph = json.load(open("initial-port.seamless"))
ctx.add_zip("initial-port.zip")
ctx.set_graph(graph)
ctx.compute()
save()
exit()

rm initial-port.seamless initial-port.zip

Step 1.
The initial webform was generated as follows:

ctx.na_resid.celltype = "int"
ctx.na_resid.share(readonly=False)
ctx.protein_resid.celltype = "int"
ctx.protein_resid.share(readonly=False)
ctx.translate()

Webform.json was modified (see diff).

Step 2.
The webform was updated as follows:

ctx.pdb_code.celltype = "str"
ctx.pdb_code.share(readonly=False)
ctx.na_chain.celltype = "str"
ctx.na_chain.share(readonly=False)
ctx.protein_chain.celltype = "str"
ctx.protein_chain.share(readonly=False)
ctx.translate()

A web component "input" was created (adapted from "numberinput")

seamless2webform was adapted so that "input" is the default component for str cells.

Step 3.
ctx.plot.celltype = "text"
ctx.plot.share()
# http://localhost:5813/ctx/plot displays the plot, as ctx.plot.mimetype = "text/html"
ctx.df_stackings.celltype = "text"
ctx.df_stackings.share()
# Likewise, http://localhost:5813/ctx/df_stackings displays the dataframe
ctx.translate()

A web component "html" was created for HTML cells
A web component "iframe" was created for HTML cells with script tags.

Add the buffer lifetime hack to load-project.py

Step 4.
An NGL viewer was added, and made responsive to the PDB code+chain+resid
(see diff on index.js and index.html)

Step 5.
Python code was mounted to disk. Also, code to annotate the stackings with headers was created.

ctx.calc_properties.mount("calc-properties.py")
ctx.get_plot.code.mount("get-plot.py")
ctx.annotate_stackings = Transformer()
ctx.annotate_stackings.code = ""
ctx.annotate_stackings.code.mount("annotate-stackings.py")
ctx.annotate_stackings.stackings = ctx.stackings
ctx.stackings_annotated = ctx.annotate_stackings
ctx.stackings_annotated.celltype = "plain"
ctx.stackings_annotated.share()
del ctx.df_stackings.share

The annotated stackings were visualized in the web page (webform.json) as a Vuetify datatable.
The index.html was modified to bring the NGL viewer down.

Step 6.
A hidden "id" field was added to the annotated stackings
The datatable HTML was modified to allow a row to be selected by ID
Selecting a row caused the na_resid and protein_resid to be updated,
  also on the server and in the NGL viewer