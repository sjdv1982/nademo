{
  "INDEX.jinja.html": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>{{title}}</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/buefy/dist/buefy.min.css\">\n    <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900'>\n    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/@mdi/font@5.x/css/materialdesignicons.min.css'>\n    <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Material+Icons'>\n    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/vuetify@2.3.20/dist/vuetify.min.css'>\n</head>\n\n<body>\n    <div id=\"app\">\n        <v-app id=\"vuetify-app\">\n{{COMPONENTS}}\n        </v-app>\n    </div>\n\n    <script src='https://cdn.jsdelivr.net/npm/babel-polyfill/dist/polyfill.min.js'></script>\n    <script src='https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js'></script>\n    <script src='https://cdn.jsdelivr.net/npm/vuetify@2.3.20/dist/vuetify.min.js'></script>\n    <script src=\"https://unpkg.com/buefy/dist/buefy.min.js\"></script>\n    <script type=\"text/javascript\" src=\"./seamless-client.js\"></script>\n    <script type=\"text/javascript\" src=\"./index.js\"></script>\n</body>\n</html>",
  "INDEX.jinja.js": "seamless_read_cells = {{ SEAMLESS_READ_CELLS }}\nseamless_write_cells = {{ SEAMLESS_WRITE_CELLS }}\n\nctx = connect_seamless()\nctx.self.onsharelist = function(sharelist) {\n    sharelist.forEach(element => {\n        if (seamless_read_cells[\"json\"].indexOf(element) >= 0) {\n            ctx[element].onchange = function() {\n                const v = JSON.parse(this.value)\n                vm[element] = v\n            }\n        }\n        else if (seamless_read_cells[\"text\"].indexOf(element) >= 0) {\n            ctx[element].onchange = function() {\n                vm[element] = this.value\n            }\n        }\n    })\n}\n\nfunction seamless_update(cell, value, encoding) {\n  if (!ctx) return\n  if (!ctx.self.sharelist) return\n  if (ctx.self.sharelist.indexOf(cell) < 0) return\n  if (encoding == \"json\") {\n    ctx[cell].set(JSON.stringify(value))\n  }\n  else if (encoding == \"text\") {\n    ctx[cell].set(value)\n  }\n}\n\nconst app = new Vue({\n  vuetify: new Vuetify(),\n  data() {\n    return {{ VUE_DATA }}\n  },\n  watch: {\n    {{WATCHERS}}\n  }\n})\n\nvm = app.$mount('#app')",
  "card.README.txt": "",
  "card.jinja.html": "            <section>\n\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"{{ID1}}\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"{{ID1}}\">\n                        <p class=\"card-header-title\">\n                            {{title}}\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                            <pre>{{ '{{' }} {{CELL}} {{ '}}' }}</pre>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>",
  "datatable.README.txt": "Data table (Vuetify) to visualize a plain cell.\n\nThe visualized cell must contain a dict with the following keys:\n\n\"headers\": a description of the data columns, as a list-of-dicts.\nSee https://vuetifyjs.com/en/api/v-data-table/#headers\n for a description of an individual dict (DataTableHeader)\nExample: [{\"value\": \"a\", \"text\": \"Field A\"}, {\"value\": \"b\", \"text\": \"Field B\"}]\n\n\"items\": the data to display, as a list-of-dicts.\nEach dict must contain a key corresponding to \"value\"\n in one of the header dicts.\nExample: [{\"a\": 1, \"b\": \"one\"}, {\"a\": 2, \"b\": \"two\"}]\n\nParameters:\n- title (string).",
  "datatable.jinja.html": "            <section>\n                <b-field label=\"{{title}}\">\n                <v-data-table\n                  :headers=\"{{CELL}}.headers\"\n                  :items=\"{{CELL}}.items\"\n\n                  class=\"elevation-1\"\n                >\n                  <template v-slot:item=\"{ item }\">\n                    <tr>\n                        <td v-for=\"header in {{CELL}}.headers\">\n                          {{ '{{' }} item[header.value] {{ '}}' }}\n                        </td>\n                    </tr>\n                  </template>\n                </v-data-table>\n                </b-field>\n              </section>",
  "numberinput.README.txt": "Number input for integers.\n\nParameters:\n- title (string).\n- editable (bool). If true, the number input is editable",
  "numberinput.jinja.html": "            <b-field label=\"{{title}}\">\n                <b-numberinput\n                    v-bind:value=\"{{CELL}}\"\n                    v-model=\"{{CELL}}\"\n                    :editable=\"{% if editable %}true{% else %}false{% endif %}\"\n                />\n            </b-field>",
  "slider.README.txt": "Slider for integers and floats\n\nParameters:\n- title (string).\n- min (float). Minimum value.\n- max (float). Maximum value.",
  "slider.jinja.html": ""
}
